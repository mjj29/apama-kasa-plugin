<?xml version="1.0" encoding="UTF-8" standalone="no"?><Packages><Package depth="../" display="kasa" name="kasa"><Type category="Event" name="Response"><Description><![CDATA[Response event from asynchronous Kasa methods.

 Contains a request id matching the request id returned from the action and the return value of the method. Should be listened for like this: <pre>
	monitor.subscribe(kasa.Kasa.CHANNEL);
	on kasa.Response(requestId=kasa.Kasa.discover()) as response {
	}
</pre>]]></Description><Summary><![CDATA[Response event from asynchronous Kasa methods.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Member name="requestId" type="integer"><Description><![CDATA[The request id from the request.]]></Description><Summary><![CDATA[The request id from the request.]]></Summary><TypeParameters/></Member><Member name="data" type="any" wildcard="true"><Description><![CDATA[The return value of the request. Could be any type, could be empty.]]></Description><Summary><![CDATA[The return value of the request. Could be any type, could be empty.]]></Summary><TypeParameters/></Member></Type><Type category="Event" name="Device"><Description><![CDATA[Represents a SmartDevice.

 Most methods on this event are asynchronous and return Response events once complete.

 These response contain a request id matching the request id returned from the action and the return value of the method. They should be listened for like this: <pre>
	monitor.subscribe(kasa.Kasa.CHANNEL);
	on kasa.Response(requestId=kasa.Kasa.discover()) as response {
	}
</pre>]]></Description><Summary><![CDATA[Represents a SmartDevice.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="kasa" type="Response"/></Listens><Spawns/><Import library="KasaPlugin" name="plugin" private="true"><Description/><Summary/><TypeParameters/></Import><Member constant="true" name="CHANNEL" type="string" typeValue="&quot;kasa.Kasa.channel&quot;"><Description><![CDATA[The channel which Response events will be sent to.]]></Description><Summary><![CDATA[The channel which Response events will be sent to.]]></Summary><TypeParameters/></Member><Member constant="true" name="TYPE_PLUG" type="string" typeValue="&quot;DeviceType.Plug&quot;"><Description><![CDATA[This device is a Plug-type.]]></Description><Summary><![CDATA[This device is a Plug-type.]]></Summary><TypeParameters/></Member><Member constant="true" name="TYPE_BULB" type="string" typeValue="&quot;DeviceType.Bulb&quot;"><Description><![CDATA[This device is a Bulb-type.]]></Description><Summary><![CDATA[This device is a Bulb-type.]]></Summary><TypeParameters/></Member><Member constant="true" name="TYPE_STRIP" type="string" typeValue="&quot;DeviceType.Strip&quot;"><Description><![CDATA[This device is a Power-strip-type.]]></Description><Summary><![CDATA[This device is a Power-strip-type.]]></Summary><TypeParameters/></Member><Member constant="true" name="TYPE_DIMMER" type="string" typeValue="&quot;DeviceType.Dimmer&quot;"><Description><![CDATA[This device is a Dimmer-type.]]></Description><Summary><![CDATA[This device is a Dimmer-type.]]></Summary><TypeParameters/></Member><Member constant="true" name="TYPE_UNKNOWN" type="string" typeValue="&quot;DeviceType.Unknown&quot;"><Description><![CDATA[This device type is unknown.]]></Description><Summary><![CDATA[This device type is unknown.]]></Summary><TypeParameters/></Member><Member name="id" type="string"><Description><![CDATA[A unique ID of the device (typically this is the MAC address).]]></Description><Summary><![CDATA[A unique ID of the device (typically this is the MAC address).]]></Summary><TypeParameters/></Member><Member name="address" type="string"><Description><![CDATA[The IP address of the device.]]></Description><Summary><![CDATA[The IP address of the device.]]></Summary><TypeParameters/></Member><Member name="model" type="string"><Description><![CDATA[The model name of the device.]]></Description><Summary><![CDATA[The model name of the device.]]></Summary><TypeParameters/></Member><Member name="deviceType" type="string"><Description><![CDATA[The device type of the device. Will be one of TYPE_PLUG, TYPE_BULB, TYPE_STRIP, TYPE_DIMMER or TYPE_UNKNOWN.]]></Description><Summary><![CDATA[The device type of the device. Will be one of TYPE_PLUG, TYPE_BULB, TYPE_STRIP, TYPE_DIMMER or TYPE_UNKNOWN.]]></Summary><TypeParameters/></Member><Member name="powerState" type="boolean"><Description><![CDATA[Whether the device is on.]]></Description><Summary><![CDATA[Whether the device is on.]]></Summary><TypeParameters/></Member><Member name="sysinfo" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="any"/></Parameters><Description><![CDATA[Arbitrary system info from the device.]]></Description><Summary><![CDATA[Arbitrary system info from the device.]]></Summary><TypeParameters/></Member><Member name="hwinfo" type="dictionary"><Parameters><Parameter type="string"/><Parameter type="any"/></Parameters><Description><![CDATA[Arbitrary device info from the device.]]></Description><Summary><![CDATA[Arbitrary device info from the device.]]></Summary><TypeParameters/></Member><Action name="powerOn" staticNature=""><Description><![CDATA[Turn the device on.

 If it's already on, nothing will happen.

 Sends a Response event once the power state has changed. That response has no payload.]]></Description><Summary><![CDATA[Turn the device on.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="kasa" type="Response"/></Listens><Spawns/><Returns type="integer"><Description><![CDATA[The requestId with which the Response will be returned.]]></Description></Returns></Action><Action name="setChildPowerState" staticNature=""><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="integer"/><Parameters><Parameter name="child" type="integer"/><Parameter name="enabled" type="boolean"/></Parameters></Action><Action name="getBrightness" staticNature=""><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="integer"/></Action><Action name="powerOff" staticNature=""><Description><![CDATA[Turn the device off.

 If it's already off, nothing will happen.

 Sends a Response event once the power state has changed. That response has no payload.]]></Description><Summary><![CDATA[Turn the device off.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="kasa" type="Response"/></Listens><Spawns/><Returns type="integer"><Description><![CDATA[The requestId with which the Response will be returned.]]></Description></Returns></Action><Action name="setColorTemp" staticNature=""><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="integer"/><Parameters><Parameter name="kelvin" type="integer"/><Parameter name="transitionMs" type="integer"/></Parameters></Action><Action name="update" staticNature=""><Description><![CDATA[Refresh the data of this device.

 Sends a Response event once data has been retrieved. At that point the data in this Device event will be up to date.]]></Description><Summary><![CDATA[Refresh the data of this device.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="kasa" type="Response"/></Listens><Spawns/><Returns type="integer"><Description><![CDATA[The requestId with which the Response will be returned.]]></Description></Returns></Action><Action name="getHue" staticNature=""><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="integer"/></Action><Action name="setHSV" staticNature=""><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="integer"/><Parameters><Parameter name="hue" type="integer"/><Parameter name="saturation" type="integer"/><Parameter name="value" type="integer"/><Parameter name="transitionMs" type="integer"/></Parameters></Action><Action name="getSaturation" staticNature=""><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="integer"/></Action><Action name="togglePowerState" staticNature=""><Description><![CDATA[Toggle the current power state

 If it's on, the device will be turned off. If it's off, the device will be turned on.

 Sends a Response event once the power state has changed. That response has no payload.]]></Description><Summary><![CDATA[Toggle the current power state]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens><Reference package="kasa" type="Response"/></Listens><Spawns/><Returns type="integer"><Description><![CDATA[The requestId with which the Response will be returned.]]></Description></Returns></Action><Action name="getValue" staticNature=""><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="integer"/></Action><Action name="setBrightness" staticNature=""><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="integer"/><Parameters><Parameter name="brightnessPercent" type="integer"/><Parameter name="transitionMs" type="integer"/></Parameters></Action><Action name="getChildAlias" staticNature=""><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="string"/><Parameters><Parameter name="child" type="integer"/></Parameters></Action><Action name="numChildren" staticNature=""><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="integer"/></Action><Action name="getColorTemp" staticNature=""><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="integer"/></Action><Action name="getChildPowerState" staticNature=""><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="boolean"/><Parameters><Parameter name="child" type="integer"/></Parameters></Action></Type><Type category="Event" name="Kasa"><Description><![CDATA[Holds static actions for interacting with Kasa devices.

 Most methods on this event are asynchronous and return Response events once complete.

 These response contain a request id matching the request id returned from the action and the return value of the method. They should be listened for like this: <pre>
	monitor.subscribe(kasa.Kasa.CHANNEL);
	on kasa.Response(requestId=kasa.Kasa.discover()) as response {
	}
</pre>]]></Description><Summary><![CDATA[Holds static actions for interacting with Kasa devices.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Import library="KasaPlugin" name="plugin" private="true"><Description/><Summary/><TypeParameters/></Import><Member constant="true" name="CHANNEL" type="string" typeValue="&quot;kasa.Kasa.channel&quot;"><Description><![CDATA[The channel which Response events will be sent to.]]></Description><Summary><![CDATA[The channel which Response events will be sent to.]]></Summary><TypeParameters/></Member><Action name="discover" staticNature="static "><Description><![CDATA[Find all devices on the network.

 Sends a Response event once the power state has changed. That response contains a sequence of kasa.Device events.]]></Description><Summary><![CDATA[Find all devices on the network.]]></Summary><TypeParameters/><See package="kasa" type="Response"><Description/></See><See package="kasa" type="Device"><Description/></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="integer"><Description><![CDATA[The requestId with which the Response will be returned.]]></Description></Returns></Action><Action name="device" staticNature="static "><Description><![CDATA[Find a device with a specific address.

 Sends a Response event once the power state has changed. That response contains a kasa.Device event.]]></Description><Summary><![CDATA[Find a device with a specific address.]]></Summary><TypeParameters/><See package="kasa" type="Response"><Description/></See><See package="kasa" type="Device"><Description/></See><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/><Returns type="integer"><Description><![CDATA[The requestId with which the Response will be returned.]]></Description></Returns><Parameters><Parameter name="address" type="string"/></Parameters></Action><Action name="shutdown" staticNature="static "><Description><![CDATA[Call this action once you are finished using the Kasa plug-in.

 For example from your onunload action.]]></Description><Summary><![CDATA[Call this action once you are finished using the Kasa plug-in.]]></Summary><TypeParameters/><Routes/><Emits/><Enqueues/><Sends/><Listens/><Spawns/></Action></Type></Package></Packages>